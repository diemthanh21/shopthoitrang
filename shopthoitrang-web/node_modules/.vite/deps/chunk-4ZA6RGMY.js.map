{
  "version": 3,
  "sources": ["../../antd/es/_util/responsiveObserver.js", "../../antd/es/_util/mediaQueryUtil.js", "../../antd/es/grid/hooks/useBreakpoint.js"],
  "sourcesContent": ["import React from 'react';\nimport { useToken } from '../theme/internal';\nimport { addMediaQueryListener, removeMediaQueryListener } from './mediaQueryUtil';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport const matchScreen = (screens, screenSizes) => {\n  if (!screenSizes) {\n    return;\n  }\n  for (const breakpoint of responsiveArray) {\n    if (screens[breakpoint] && (screenSizes === null || screenSizes === void 0 ? void 0 : screenSizes[breakpoint]) !== undefined) {\n      return screenSizes[breakpoint];\n    }\n  }\n};\nconst useResponsiveObserver = () => {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      responsiveMap,\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) {\n          this.register();\n        }\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) {\n          this.unregister();\n        }\n      },\n      register() {\n        Object.entries(responsiveMap).forEach(([screen, mediaQuery]) => {\n          const listener = ({\n            matches\n          }) => {\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(mediaQuery);\n          addMediaQueryListener(mql, listener);\n          this.matchHandlers[mediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      unregister() {\n        Object.values(responsiveMap).forEach(mediaQuery => {\n          const handler = this.matchHandlers[mediaQuery];\n          removeMediaQueryListener(handler === null || handler === void 0 ? void 0 : handler.mql, handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      }\n    };\n  }, [token]);\n};\nexport default useResponsiveObserver;", "export const addMediaQueryListener = (mql, handler) => {\n  // Don't delete here, please keep the code compatible\n  if (typeof (mql === null || mql === void 0 ? void 0 : mql.addEventListener) !== 'undefined') {\n    mql.addEventListener('change', handler);\n  } else if (typeof (mql === null || mql === void 0 ? void 0 : mql.addListener) !== 'undefined') {\n    mql.addListener(handler);\n  }\n};\nexport const removeMediaQueryListener = (mql, handler) => {\n  // Don't delete here, please keep the code compatible\n  if (typeof (mql === null || mql === void 0 ? void 0 : mql.removeEventListener) !== 'undefined') {\n    mql.removeEventListener('change', handler);\n  } else if (typeof (mql === null || mql === void 0 ? void 0 : mql.removeListener) !== 'undefined') {\n    mql.removeListener(handler);\n  }\n};", "\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint(refreshOnChange = true, defaultScreens = {}) {\n  const screensRef = useRef(defaultScreens);\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;"],
  "mappings": "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",
  "names": ["React", "import_react"]
}
