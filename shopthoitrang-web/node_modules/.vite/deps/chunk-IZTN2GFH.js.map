{
  "version": 3,
  "sources": ["../../antd/es/avatar/Avatar.js", "../../antd/es/avatar/AvatarContext.js", "../../antd/es/avatar/style/index.js", "../../antd/es/avatar/AvatarGroup.js", "../../antd/es/avatar/index.js"],
  "sourcesContent": ["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport { composeRef } from \"rc-util/es/ref\";\nimport { responsiveArray } from '../_util/responsiveObserver';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nconst Avatar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      shape,\n      size: customSize,\n      src,\n      srcSet,\n      icon,\n      className,\n      rootClassName,\n      style,\n      alt,\n      draggable,\n      children,\n      crossOrigin,\n      gap = 4,\n      onError\n    } = props,\n    others = __rest(props, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"rootClassName\", \"style\", \"alt\", \"draggable\", \"children\", \"crossOrigin\", \"gap\", \"onError\"]);\n  const [scale, setScale] = React.useState(1);\n  const [mounted, setMounted] = React.useState(false);\n  const [isImgExist, setIsImgExist] = React.useState(true);\n  const avatarNodeRef = React.useRef(null);\n  const avatarChildrenRef = React.useRef(null);\n  const avatarNodeMergedRef = composeRef(ref, avatarNodeRef);\n  const {\n    getPrefixCls,\n    avatar\n  } = React.useContext(ConfigContext);\n  const avatarCtx = React.useContext(AvatarContext);\n  const setScaleParam = () => {\n    if (!avatarChildrenRef.current || !avatarNodeRef.current) {\n      return;\n    }\n    const childrenWidth = avatarChildrenRef.current.offsetWidth; // offsetWidth avoid affecting be transform scale\n    const nodeWidth = avatarNodeRef.current.offsetWidth;\n    // denominator is 0 is no meaning\n    if (childrenWidth !== 0 && nodeWidth !== 0) {\n      if (gap * 2 < nodeWidth) {\n        setScale(nodeWidth - gap * 2 < childrenWidth ? (nodeWidth - gap * 2) / childrenWidth : 1);\n      }\n    }\n  };\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    setIsImgExist(true);\n    setScale(1);\n  }, [src]);\n  React.useEffect(setScaleParam, [gap]);\n  const handleImgLoadError = () => {\n    const errorFlag = onError === null || onError === void 0 ? void 0 : onError();\n    if (errorFlag !== false) {\n      setIsImgExist(false);\n    }\n  };\n  const size = useSize(ctxSize => {\n    var _a, _b;\n    return (_b = (_a = customSize !== null && customSize !== void 0 ? customSize : avatarCtx === null || avatarCtx === void 0 ? void 0 : avatarCtx.size) !== null && _a !== void 0 ? _a : ctxSize) !== null && _b !== void 0 ? _b : 'default';\n  });\n  const needResponsive = Object.keys(typeof size === 'object' ? size || {} : {}).some(key => ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'].includes(key));\n  const screens = useBreakpoint(needResponsive);\n  const responsiveSizeStyle = React.useMemo(() => {\n    if (typeof size !== 'object') {\n      return {};\n    }\n    const currentBreakpoint = responsiveArray.find(screen => screens[screen]);\n    const currentSize = size[currentBreakpoint];\n    return currentSize ? {\n      width: currentSize,\n      height: currentSize,\n      fontSize: currentSize && (icon || children) ? currentSize / 2 : 18\n    } : {};\n  }, [screens, size]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Avatar');\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof icon === 'string' && icon.length > 2), 'breaking', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`) : void 0;\n  }\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const hasImageElement = /*#__PURE__*/React.isValidElement(src);\n  const mergedShape = shape || (avatarCtx === null || avatarCtx === void 0 ? void 0 : avatarCtx.shape) || 'circle';\n  const classString = classNames(prefixCls, sizeCls, avatar === null || avatar === void 0 ? void 0 : avatar.className, `${prefixCls}-${mergedShape}`, {\n    [`${prefixCls}-image`]: hasImageElement || src && isImgExist,\n    [`${prefixCls}-icon`]: !!icon\n  }, cssVarCls, rootCls, className, rootClassName, hashId);\n  const sizeStyle = typeof size === 'number' ? {\n    width: size,\n    height: size,\n    fontSize: icon ? size / 2 : 18\n  } : {};\n  let childrenToRender;\n  if (typeof src === 'string' && isImgExist) {\n    childrenToRender = /*#__PURE__*/React.createElement(\"img\", {\n      src: src,\n      draggable: draggable,\n      srcSet: srcSet,\n      onError: handleImgLoadError,\n      alt: alt,\n      crossOrigin: crossOrigin\n    });\n  } else if (hasImageElement) {\n    childrenToRender = src;\n  } else if (icon) {\n    childrenToRender = icon;\n  } else if (mounted || scale !== 1) {\n    const transformString = `scale(${scale})`;\n    const childrenStyle = {\n      msTransform: transformString,\n      WebkitTransform: transformString,\n      transform: transformString\n    };\n    childrenToRender = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: setScaleParam\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-string`,\n      ref: avatarChildrenRef,\n      style: Object.assign({}, childrenStyle)\n    }, children));\n  } else {\n    childrenToRender = /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-string`,\n      style: {\n        opacity: 0\n      },\n      ref: avatarChildrenRef\n    }, children);\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"span\", Object.assign({}, others, {\n    style: Object.assign(Object.assign(Object.assign(Object.assign({}, sizeStyle), responsiveSizeStyle), avatar === null || avatar === void 0 ? void 0 : avatar.style), style),\n    className: classString,\n    ref: avatarNodeMergedRef\n  }), childrenToRender));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Avatar.displayName = 'Avatar';\n}\nexport default Avatar;", "import * as React from 'react';\nconst AvatarContext = /*#__PURE__*/React.createContext({});\nexport default AvatarContext;", "import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    iconFontSize,\n    iconFontSizeLG,\n    iconFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, iconFontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    fontSize,\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize: iconFontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${unit(lineWidth)} ${lineType} transparent`,\n      '&-image': {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, iconFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, iconFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, iconFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: fontSize,\n    textFontSizeLG: fontSize,\n    textFontSizeSM: fontSize,\n    iconFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    iconFontSizeLG: fontSizeHeading3,\n    iconFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);", "\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Popover from '../popover';\nimport Avatar from './Avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nconst AvatarContextProvider = props => {\n  const {\n    size,\n    shape\n  } = React.useContext(AvatarContext);\n  const avatarContextValue = React.useMemo(() => ({\n    size: props.size || size,\n    shape: props.shape || shape\n  }), [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nconst AvatarGroup = props => {\n  var _a, _b, _c, _d;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    maxCount,\n    maxStyle,\n    size,\n    shape,\n    maxPopoverPlacement,\n    maxPopoverTrigger,\n    children,\n    max\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Avatar.Group');\n    [['maxCount', 'max={{ count: number }}'], ['maxStyle', 'max={{ style: CSSProperties }}'], ['maxPopoverPlacement', 'max={{ popover: PopoverProps }}'], ['maxPopoverTrigger', 'max={{ popover: PopoverProps }}']].forEach(([deprecatedName, newName]) => {\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, cssVarCls, rootCls, className, rootClassName, hashId);\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `avatar-key-${index}`\n  }));\n  const mergeCount = (max === null || max === void 0 ? void 0 : max.count) || maxCount;\n  const numOfChildren = childrenWithProps.length;\n  if (mergeCount && mergeCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, mergeCount);\n    const childrenHidden = childrenWithProps.slice(mergeCount, numOfChildren);\n    const mergeStyle = (max === null || max === void 0 ? void 0 : max.style) || maxStyle;\n    const mergePopoverTrigger = ((_a = max === null || max === void 0 ? void 0 : max.popover) === null || _a === void 0 ? void 0 : _a.trigger) || maxPopoverTrigger || 'hover';\n    const mergePopoverPlacement = ((_b = max === null || max === void 0 ? void 0 : max.popover) === null || _b === void 0 ? void 0 : _b.placement) || maxPopoverPlacement || 'top';\n    const mergeProps = Object.assign(Object.assign({\n      content: childrenHidden\n    }, max === null || max === void 0 ? void 0 : max.popover), {\n      classNames: {\n        root: classNames(`${groupPrefixCls}-popover`, (_d = (_c = max === null || max === void 0 ? void 0 : max.popover) === null || _c === void 0 ? void 0 : _c.classNames) === null || _d === void 0 ? void 0 : _d.root)\n      },\n      placement: mergePopoverPlacement,\n      trigger: mergePopoverTrigger\n    });\n    childrenShow.push(/*#__PURE__*/React.createElement(Popover, Object.assign({\n      key: \"avatar-popover-key\",\n      destroyOnHidden: true\n    }, mergeProps), /*#__PURE__*/React.createElement(Avatar, {\n      style: mergeStyle\n    }, `+${numOfChildren - mergeCount}`)));\n    return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default AvatarGroup;", "\"use client\";\n\nimport InternalAvatar from './Avatar';\nimport AvatarGroup from './AvatarGroup';\nconst Avatar = InternalAvatar;\nAvatar.Group = AvatarGroup;\nexport default Avatar;"],
  "mappings": "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",
  "names": ["React", "iconFontSize", "classNames", "React", "import_classnames", "classNames", "Avatar"]
}
