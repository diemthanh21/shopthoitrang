{
  "version": 3,
  "sources": ["../../antd/es/grid/style/index.js"],
  "sourcesContent": ["import { unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Row-Shared ==============================\nconst genGridRowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      minWidth: 0,\n      '&::before, &::after': {\n        display: 'flex'\n      },\n      '&-no-wrap': {\n        flexWrap: 'nowrap'\n      },\n      // The origin of the X-axis\n      '&-start': {\n        justifyContent: 'flex-start'\n      },\n      // The center of the X-axis\n      '&-center': {\n        justifyContent: 'center'\n      },\n      // The opposite of the X-axis\n      '&-end': {\n        justifyContent: 'flex-end'\n      },\n      '&-space-between': {\n        justifyContent: 'space-between'\n      },\n      '&-space-around': {\n        justifyContent: 'space-around'\n      },\n      '&-space-evenly': {\n        justifyContent: 'space-evenly'\n      },\n      // Align at the top\n      '&-top': {\n        alignItems: 'flex-start'\n      },\n      // Align at the center\n      '&-middle': {\n        alignItems: 'center'\n      },\n      '&-bottom': {\n        alignItems: 'flex-end'\n      }\n    }\n  };\n};\n// ============================== Col-Shared ==============================\nconst genGridColStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      position: 'relative',\n      maxWidth: '100%',\n      // Prevent columns from collapsing when empty\n      minHeight: 1\n    }\n  };\n};\nconst genLoopGridColumnsStyle = (token, sizeCls) => {\n  const {\n    prefixCls,\n    componentCls,\n    gridColumns\n  } = token;\n  const gridColumnsStyle = {};\n  for (let i = gridColumns; i >= 0; i--) {\n    if (i === 0) {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'none'\n      };\n      gridColumnsStyle[`${componentCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: 0\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: 0\n      };\n    } else {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = [\n      // https://github.com/ant-design/ant-design/issues/44456\n      // Form set `display: flex` on Col which will override `display: block`.\n      // Let's get it from css variable to support override.\n      {\n        ['--ant-display']: 'block',\n        // Fallback to display if variable not support\n        display: 'block'\n      }, {\n        display: 'var(--ant-display)',\n        flex: `0 0 ${i / gridColumns * 100}%`,\n        maxWidth: `${i / gridColumns * 100}%`\n      }];\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: i\n      };\n    }\n  }\n  // Flex CSS Var\n  gridColumnsStyle[`${componentCls}${sizeCls}-flex`] = {\n    flex: `var(--${prefixCls}${sizeCls}-flex)`\n  };\n  return gridColumnsStyle;\n};\nconst genGridStyle = (token, sizeCls) => genLoopGridColumnsStyle(token, sizeCls);\nconst genGridMediaStyle = (token, screenSize, sizeCls) => ({\n  [`@media (min-width: ${unit(screenSize)})`]: Object.assign({}, genGridStyle(token, sizeCls))\n});\nexport const prepareRowComponentToken = () => ({});\nexport const prepareColComponentToken = () => ({});\n// ============================== Export ==============================\nexport const useRowStyle = genStyleHooks('Grid', genGridRowStyle, prepareRowComponentToken);\nexport const getMediaSize = token => {\n  const mediaSizesMap = {\n    xs: token.screenXSMin,\n    sm: token.screenSMMin,\n    md: token.screenMDMin,\n    lg: token.screenLGMin,\n    xl: token.screenXLMin,\n    xxl: token.screenXXLMin\n  };\n  return mediaSizesMap;\n};\nexport const useColStyle = genStyleHooks('Grid', token => {\n  const gridToken = mergeToken(token, {\n    gridColumns: 24 // Row is divided into 24 parts in Grid\n  });\n  const gridMediaSizesMap = getMediaSize(gridToken);\n  delete gridMediaSizesMap.xs;\n  return [genGridColStyle(gridToken), genGridStyle(gridToken, ''), genGridStyle(gridToken, '-xs'), Object.keys(gridMediaSizesMap).map(key => genGridMediaStyle(gridToken, gridMediaSizesMap[key], `-${key}`)).reduce((pre, cur) => Object.assign(Object.assign({}, pre), cur), {})];\n}, prepareColComponentToken);"],
  "mappings": "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",
  "names": []
}
